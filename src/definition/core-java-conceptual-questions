Please answer the below core-java Questions:

What is programing language?
A. A programming language is a set of commands, instructions, and other syntax use to create
   a software program. The term programming language usually refers to high-level languages,
   such as BASIC, C, C++, COBOL, Java, FORTRAN, Ada, and Pascal.
   Each programming language has a unique set of keywords (words that it understands)
   and a special syntax for organizing program instructions.





What jdk contains or composed of and define each components?
A. jdk is Java Development Kit,  It contains JRE and several development tools,
   an interpreter/loader (java), a compiler (javac), an archiver (jar),a documentation generator (javadoc)
   accompanied with another tool.
          jdk= JRE(jvm is inside of JRE) + Development tool
 ## Definition of each one :
      * JRE:Java Runtime Environment,. The Java Runtime Environment is a set of software tools which are used for developing Java applications.
        It is used to provide the runtime environment. It is the implementation of JVM
      * JVM:(Java Virtual Machine) it  performs the following main tasks:
                                      -Loads code.
                                      -Verifies code.
                                      -Executes code.
                                      -Provides runtime environment

      * Development Tools are Tools and utilities that will help you to develop,
      execute, debug, and document programs written in the Java programming language.



What is IDE?
A.IDE it's an Integrated Development Environment,It is a software application that defines the visual representation
 of the location of the files easily and makes it more understandable for the user. It contains development tools such as text editors,
 code libraries, compilers, and test platforms and consists of at least build automation tools, and a debugger.


What are the IDEs available in the market to support java?
A.-Eclipse
  -IntelliJ
  -NetBeans
  -JDeveloper
  -MyEclipse
  -BlueJ
  -JCreator
  -DrJava
  -jGRASP
  -JSource



Explain the entire java life cycle.
A. Life cycle of a java program tells us what happens right from the point
   when we type source code in a text editor to the point that source code is converted into machine code
# First, you will start with typing the program in a text-editor (ex: notepad}. After completing editing of the program, we have to save the file.
  While saving the file you should remember that the file must be saved with .java extension.
  For example, let’s think that I had written a Java program which contains a single class Sample
  (more on classes in future posts). It is a good convention to save the file with the name of the class.
   So, as per my example, the file will be saved as Sample.java.

# Second step is compilation. The name of the Java compiler is javac.
 The input to the compiler is Java source code which is available in Sample.java.
 The output of the compiler is machine independent or platform independent code which is known as bytecode.
 The file which is generated after compilation is .class file. As per my example, the bytecode file will be Sample.class.

# Last step is execution. The bytecode generated by the compiler will be executed by Java Virtual Machine (JVM).
  Input to the JVM is bytecode and output is machine code (0’s and 1’s) which will be executed by the CPU of the local machine.




what is class?
A. CLASS is a blueprint or a set of instructions to build a specific type of object.





What is object?
A. An object is an instance of a class.
   Objects are key to understanding object oriented technology.
   An object stores its state in fields(variables in some programming languages)
   and exposes its behavior through methods (functions in some programming languages)




What is the entry point of an application?
A.Entry point is a class having a method with signature public static void main(String[] args),
It is the first method that is invoked when a Java program is run.Means the main Method



Why main is static?
A. Static is a keyword used to describe how objects are managed in memory. It means that the static object belongs specifically
to the class, instead of instances of that class. Variables, methods, and nested classes can be static.



Which class is the superclass of all classes?
A. java.lang.Object is a super class of any class







What is difference between path and classpath variables?

A. path is set for use java tool in your java program like java, javac, javap. javac are used for compile the code.
 classpath are used for use predefined class in your program for example use scanner class in your program for this you need to set classpath.
 classpath  is used to set the path for java classes.





What is the difference between an Interface and Abstract class?
 A. -Abstract: It can have default method implementation
    Interface: Interfaces provide pure abstraction & can not have implementation at all

    -Abstract may contain non-final variables.
     Interface Variables declared in an interface are by default final

   -An abstract class can be extended using the keyword “extends"
    The interface should be implemented using keyword implements

   - Abstract Can have public, protected, private and default modifier
    Interface methods are by default public. you can not use any other access modifier with it

   - Abstract can extend only one abstract class
    In Interface Can implement multiple interfaces

   -An abstract class can have constructors
    An interface can not have constructors

   -An abstract class can extend another class and can implement multiple Java interfaces
    The interface can extend another Java interface only



Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
A. No, we can't create an object of an abstract class










what is Access Specifier?
A.  Regulate access to classes, fields and methods in Java.
 It determine whether a field or method in a class, can be used  by another method in another class or sub-class.
 We have 4 type:
    1. public:you can call it from different class and package
    2. private:you call it only in the same class
    3. protected: you can call it in different class but in the same package
    4. default(no specifier)



What is OOP ? Define each feature of java OOP.
A. Object Oriented programming is a programming style which is associated with the concepts
like class, object, Inheritance, Encapsulation, Abstraction, Polymorphism.
    # Feature of Java 00p:
       -Inheritance: the ability to create classes that share the attributes and methods of existing classes, but with more specific features.
       Inheritance is mainly used for code reusability
       -Encapsulation: putting together all the variables (instance variables) and the methods into a single unit called Class.
       It also means hiding data and methods within an Object
       -Abstraction: It is a process of hiding the implementation details and showing only functionality to the user.
       -Polymorphism: Poly means many and morphos means forms. It describes the feature of languages that allows
        the same word or symbol to be interpreted correctly in different situations based on the context.



What is Java Package and which package is imported by default?
A. A package is a folder in a file directory. We use packages to avoid name conflicts,
and to write a better maintainable code and it’s used to group related classes.
 #  Java compiler imports the java.lang package by default


What is API? Name list of API that you have used so far.
A.API (Application Programming Interface), which is a software intermediary that helps two programs to speak to each other, is an acronym for API.
You use an API any time you use an app like Facebook, send an instant message, or check the weather on your phone.
the APIs are a collection of packages that programmers can import into their programs
  # Name list of API that i have used so far:
     - Eclipse
     -Apache POI


Does java support multiple inheritance, explain why or why not?
A. Java doesn’t allow multiple inheritance. you cannot extend more than one other class. Still, if you try to do so, a compile-time error is generated.
   It's to avoid the ambiguity caused by it.
   One of the example of such problem is the diamond problem that occurs in multiple inheritance.
    (According to the basic rule of inheritance, a copy of both demo() methods should be created in the subclass object which leaves
    the subclass with two methods with the same prototype. Then, if you call the demo() method using the object of the subclass compiler faces an ambiguous situation not knowing which method to call.









What is method overloading and when it happens?
A. Overloading allows different methods to have the same name, but different signatures where the signature can differ by the number
of input parameters or type of input parameters or both.
Explain exceptions in java and how to handle it.
# Overloading is determined at compile time




What is static keyword in java? How it has been used in variables and methods ?
A.he static keyword in Java is used for memory management mainly. We can apply static keyword with variables, methods, blocks and nested classes.

#  The  Static variable is assigned memory once and all objects of the class access the same variable.
   A static variable can be created by adding the static keyword before the variable during declaration.
    Syntax: static int a = 10;
#  A method in Java is static when it is preceded by the keyword “static”.
   Methods declared as static can have the following restrictions:
   -They can directly call other static methods only.
   -They can access static data directly.
     Syntax:  public static void main(String[] args){ }// this is main method with static key word


What is final and how it has been used variables and methods?
A. FinalF is a keyword and it's non-access modifier,it is applicable only to a variable, a method or a class.
   - Final variable  is to create constant variable.variable value can't be changed
   -final Method is to prevent method overriding
   -final class is to prevent inheritance



What is final, finally and finalize?
A. Final is a keyword. It is used to apply restrictions on class, method and variable.
 Final class can't be inherited, final method can't be overridden and final variable value can't be changed.
# Finally Finally is a block.
It is used to place important code, it will be executed whether exception is handled or not.
# Finalize is a method.
is used to perform clean up processing just before object is garbage collected, it is cleaning all the variable we don't need and save us space in RAM





What is a constructor ?
A. A constructor is a block of codes similar to the method. It is called when an instance of the class is created.
   At the time of calling constructor, memory for the object is allocated in the memory.
   It is a special type of method which is used to initialize the object.
   Every time an object is created using the new() keyword, at least one constructor is called.
   tpe of constructor:
   -default constructor
   -Parameterized Constructor

Can we have multiple constructors in a class?
A. Yes we can have multiple constructor in class


If we don't have a constructor declared, what is called during the object creation?
A. Java create default constructor automatically







What is "this" keyword in java ?
A. The this keyword refers to the current object in a method or constructor.
 It can be used inside the method or constructor of a class.It is a reference to the current object (the object whose method or constructor is being called)


What is "super" keyword in java? How many possible way can you use?
A.The super keyword refers to superclass (parent) objects.
   It is used to call superclass methods, and to access the superclass constructor.
  the most common use of the super keyword is to eliminate the confusion between superclasses and subclasses that have methods with the same name.
# Usage of Java super Keyword:
  -Super can be used to refer immediate parent class instance variable.
  -super can be used to invoke immediate parent class method.
  -super() can be used to invoke immediate parent class constructor



What is JVM stand for ?
A. First, Java code is complied into bytecode. This bytecode gets interpreted on different machines
   Between host system and Java source, Bytecode is an intermediary language.
   JVM is responsible for allocating memory space.





Is JVM platform independent?
A. JVM provides a platform-independent way of executing Java source code.



What version of java are you using?
A. I am using jdk- 11.0.8 version



What is JAR stand for ?
A. JAR stands for ARchive in Java. Centered on the common ZIP file system,
it is a file format that is used to aggregate several files into one.






What is the difference between JDK and JVM?
A. - JDK is a software development kit to develop applications in Java.
      JVM is Java runtime environment it executes Java byte code and provides an environment for executing it.
   - JDK is platform dependent.
     JVM is platform-independent.
   - JDK contains tools for developing, debugging, and monitoring java code.
     In JVM Software development tools are not included
   - JDK is the superset of JRE
     JVM is a subset of JRE.
   - The JDK enables developers to create Java programs that can be executed and run by the JRE and JVM.
     JVM is the Java platform component that executes source code.





What is the difference between JVM and JRE?
A. -JRE is an environment, in order to execute any Java program locally.
    JVM is where it's responsible for converting the Bytecode into machine specific code and makes java program write-once-run-anywhere.
   -JRE is also platform dependent.
    JVM is platform independent.





What is compile time and run time?
A. Compile-time is the time at which the source code is converted into an executable code
 while the run time is the time at which the executable code is started running.



What is heap?
A. The heap is a region of your computer's memory that is not managed automatically for you,
    and is not as tightly managed by the CPU.
    This part of memory stores the actual object in memory. Those are referenced by the variables from the stack




How java manage it's memory?
A. memory management is the process of allocation and de-allocation of objects, called Memory management. Java does memory management automatically.
   Java uses an automatic memory management system called a garbage collector.


What is the difference between String, StringBuffer and StringBuilder?
A. Strings in Java are objects used to represent a sequence of character; example: String course =“Edureka”;
 - StringBuffer and StringBuilder are classes used for String manipulation. These are mutable objects, which provide methods
 such as substring(), insert(), append(), delete() for String manipulation.
 -StringBuffer is to used when multiple threads are working on the same String; example: StringBuffer course  = new StringBuffer("Edureka");
 -StringBuilder is used in a single-threaded environment. example: StringBuilder course  = new StringBuilder("Edureka");





What is Singleton class?
A. a singleton class is a class that can have only one object (an instance of the class) at a time.
 To design a singleton class: Make constructor as private.Write a static method that has return type object of this singleton class.



What is Serialization and Deserialization?
-Serialization converts an in-memory data structure to a value that can be stored or transferred.
-Deserialization takes a series of bytes and converts it to an in-memory data structure that can be consumed programmatically.




when to use transient variable in java?
A. The transient is a modifier of variables used in serialization. If we don't want to save the value of a particular variable in a file at the time of serialization,
then we use the transient keyword.It ignores the original value of the variable as JVM comes across transient keywords
 and saves the default value of that variable data type.






Difference between while and do..while loop?
A. The while loop in java executes one or more statements after testing the loop continuation condition at the start of each iteration.
 - Do-while loop, tests the loop continuation condition after the first iteration has completed.
 Therefore, the do-while loop guarantees one execution of the loop logic whereas the while does not.



What is Enum?
A. An enum is a special type of data type which is basically a collection (set) of constants.


What is Iterator?
A. An Iterator is an object that can be used to loop through collections, like ArrayList and HashSet.


Which one will take more memory, an int or Integer?
A. int is a primitive data type which takes 32 bits(4 bytes)
   Integer is s a wrapper class which wraps a primitive type int into an object. which takes 128 bits (16 bytes) to store int value.
so integer take more memory


Why is String Immutable in Java?
A. The string is Immutable in Java because String objects are cached in the String pool ( is a specific storage area for string objects);
Class whose object cannot be modified.The value of the immutable class object is initialized at the time of creation.



What is constructor chaining in Java?
A. Constructor chaining is the process of calling one constructor from another constructor with respect to current object.
It occurs through inheritance
  #Constructor chaining can be done in two ways:
   -Within same class: It can be done using this() keyword for constructors in same class
   -From base class: by using super() keyword to call constructor from the base class.


The difference between Serial and Parallel Garbage Collector?
A.To perform garbage collection, the serial collector requires one thread. To perform garbage collection, the throughput collector requires several threads.
For apps that do not have low pause time specifications and run on client-style computers, Serial GC is the garbage collector of choice.


What is JIT stands for?
A. JIT(Just-in-Time) compiler is a component of the runtime environment that improves the performance of Java™
applications by compiling bytecodes to native machine code at run time.



Explain Java Heap space and Garbage collection?
A. -The Java heap is the area of memory used to store objects instantiated by applications running on the JVM.
   -In java, garbage means unreferenced objects. Garbage Collection is process of reclaiming the runtime unused memory automatically.
    it is a way to destroy the unused objects.


Can you guarantee the garbage collection process?
A.No, objects will be garbage collected automatically by garbage collector


What is the difference between stack and heap in Java?
A. -Stack memory is used to store items which have a very short life like local variables, a reference variable of objects
    Heap memory is allocated to store objects and JRE classes.
   -The stack is always reserved in a LIFO (last in first out) order
  Heap memory is dynamic allocation there is no fixed pattern for allocating and deallocating blocks in memory
   -In Stack memory JVM will throw java.lang.StackOverFlowError
    In Heap memory JVM will throw java.lang.OutOfMemoryError



What is reflection in java and why is it useful?
A.Reflection is a process of examining or modifying the run time behavior of a class at run time.
It is useful because:  it lets you write programs that do not have to "know" everything at compile time, making them more dynamic, since they can be tied together at runtime.
The code can be written against known interfaces, but the actual classes to be used can be instantiated using reflection from configuration files


what is multithreading in java?
A. Multithreading is a Java feature that allows concurrent execution of two or more parts of a program for maximum utilization of CPU(Central processing unit).
   Each part of such program is called a thread. So, threads are light-weight processes within a process.

What is the use of synchronization in Java?
A. Synchronization in java is the capability to control the access of multiple threads to any shared resource.
   Java Synchronization is better option where we want to allow only one thread to access the shared resource.


What is Framework?
A. Framework is a platform for developing software applications.

What are the testing Framework available in java?
A. - JUnit
   - Selenium
   - Cucumber
   - TestNG
   - Serenity



Difference between jUnit and testNG?
A. - jUnit is opensource testing framework.
      testNG is also opensource testing framework with added benefits.
   - jUnit Does not support advanced annotations.
      testNG Supports advanced annotations and special annotations.
   - jUnit Does not support parallel testing.
      testNG Supports Parallel testing.
   - jUnit Group test feature is not present here.
      testNG Group test feature is TestNG's commonly used feature.
   - jUnit Parameterized test case take less time.
      testNG Parameterized test take more time and are complicated.
   - jUnit is difficult to use.
      testNGIt is much easier to use.


What are the dependencies for this project?
    A.Dependence injection is a technique of software engineering where the dependencies of another object are supplied by one object(or static method).

what is dependency injection in java?
A.Dependency injection (DI) is the concept in which objects get other required objects from outside.
  DI can be implemented in any programming language. The general concept behind dependency injection is called Inversion of Control.

  What is static binding and dynamic binding?
A. Static Binding happens at compile time and Dynamic Binding happens at runtime.
It doesn't decide the method to be called. Overriding is a perfect example of dynamic binding








